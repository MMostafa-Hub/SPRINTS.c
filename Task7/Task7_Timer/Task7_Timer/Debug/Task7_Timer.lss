
Task7_Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000041a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000046e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000046e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000953  00000000  00000000  00000594  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fd  00000000  00000000  00000ee7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003cd  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  000019b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003cc  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000223  00000000  00000000  00001eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000020d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 72 00 	call	0xe4	; 0xe4 <main>
  64:	0c 94 0b 02 	jmp	0x416	; 0x416 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_init>:
	mem(DRR_address) = direction;
}
int DIo_read(int PIN_address)
{
	return mem(PIN_address);
}
  6c:	fc 01       	movw	r30, r24
  6e:	60 83       	st	Z, r22
  70:	08 95       	ret

00000072 <DIO_write>:
void DIO_write(int PORT_address, int value)
{
	mem(PORT_address) = value;
  72:	fc 01       	movw	r30, r24
  74:	60 83       	st	Z, r22
  76:	08 95       	ret

00000078 <led_init>:
#include "../registers.h"

//#include <avr/io.h>
void led_init(void)
{
	DIO_init(PORTA_DIR_addr,0x01);
  78:	61 e0       	ldi	r22, 0x01	; 1
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	8a e3       	ldi	r24, 0x3A	; 58
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_init>
  84:	08 95       	ret

00000086 <led_ON>:
}

void led_ON(void)
{
	DIO_write(PORTA_Data_addr,0x01);
  86:	61 e0       	ldi	r22, 0x01	; 1
  88:	70 e0       	ldi	r23, 0x00	; 0
  8a:	8b e3       	ldi	r24, 0x3B	; 59
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 39 00 	call	0x72	; 0x72 <DIO_write>
  92:	08 95       	ret

00000094 <led_OFF>:
}

void led_OFF(void)
{
	DIO_write(PORTA_Data_addr,0x00);
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	70 e0       	ldi	r23, 0x00	; 0
  98:	8b e3       	ldi	r24, 0x3B	; 59
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	0e 94 39 00 	call	0x72	; 0x72 <DIO_write>
  a0:	08 95       	ret

000000a2 <led_ON_delay>:
}

void led_ON_delay(int time)
{
  a2:	cf 93       	push	r28
  a4:	df 93       	push	r29
  a6:	ec 01       	movw	r28, r24
	led_ON();
  a8:	0e 94 43 00 	call	0x86	; 0x86 <led_ON>
	timer_init(time);
  ac:	ce 01       	movw	r24, r28
  ae:	0e 94 79 00 	call	0xf2	; 0xf2 <timer_init>
}
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
  b6:	08 95       	ret

000000b8 <led_OFF_delay>:
void led_OFF_delay(int time)
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	ec 01       	movw	r28, r24
	led_OFF();
  be:	0e 94 4a 00 	call	0x94	; 0x94 <led_OFF>
	timer_init(time);
  c2:	ce 01       	movw	r24, r28
  c4:	0e 94 79 00 	call	0xf2	; 0xf2 <timer_init>
}
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	08 95       	ret

000000ce <led_blink>:

void led_blink(int time)
{
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	ec 01       	movw	r28, r24
	led_ON_delay(time);
  d4:	0e 94 51 00 	call	0xa2	; 0xa2 <led_ON_delay>
	led_OFF_delay(time);
  d8:	ce 01       	movw	r24, r28
  da:	0e 94 5c 00 	call	0xb8	; 0xb8 <led_OFF_delay>
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <main>:
#include "LED_Driver/led.h"
#include <avr/io.h>

inline void app_init(void)
{
	led_init();
  e4:	0e 94 3c 00 	call	0x78	; 0x78 <led_init>
int main(void)
{
	app_init();
	while (true)
	{
		led_blink(300);
  e8:	8c e2       	ldi	r24, 0x2C	; 44
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	0e 94 67 00 	call	0xce	; 0xce <led_blink>
  f0:	fb cf       	rjmp	.-10     	; 0xe8 <main+0x4>

000000f2 <timer_init>:
#include <avr/io.h>
#include <math.h>


void timer_init(int time)
{	
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	ec 01       	movw	r28, r24
	int nIterations = (int)(time/(256*1.024)); // 1
  f8:	bc 01       	movw	r22, r24
  fa:	99 0f       	add	r25, r25
  fc:	88 0b       	sbc	r24, r24
  fe:	99 0b       	sbc	r25, r25
 100:	0e 94 57 01 	call	0x2ae	; 0x2ae <__floatsisf>
 104:	2f e6       	ldi	r18, 0x6F	; 111
 106:	32 e1       	ldi	r19, 0x12	; 18
 108:	43 e8       	ldi	r20, 0x83	; 131
 10a:	53 e4       	ldi	r21, 0x43	; 67
 10c:	0e 94 ad 00 	call	0x15a	; 0x15a <__divsf3>
 110:	0e 94 1f 01 	call	0x23e	; 0x23e <__fixsfsi>
 114:	fb 01       	movw	r30, r22
	int extra = time % (int)(ceil((256*1.024))); // 37
 116:	ce 01       	movw	r24, r28
 118:	67 e0       	ldi	r22, 0x07	; 7
 11a:	71 e0       	ldi	r23, 0x01	; 1
 11c:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__divmodhi4>
	int extra_TCNT0_initial_value = 256 - extra; // 256 - 37 = 219
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	51 e0       	ldi	r21, 0x01	; 1
 124:	48 1b       	sub	r20, r24
 126:	59 0b       	sbc	r21, r25
	
	Timer_control = 0b00000101;	// Timer0, normal mode, /1024 prescalar 
 128:	85 e0       	ldi	r24, 0x05	; 5
 12a:	83 bf       	out	0x33, r24	; 51
	for(int iterator = 0 ; iterator < nIterations ;iterator++)
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	07 c0       	rjmp	.+14     	; 0x140 <timer_init+0x4e>
	{
		Timer_data = 0x00;
 132:	12 be       	out	0x32, r1	; 50
		while(Timer_overflow_flag == 0);  // Wait for TOV0 to roll overs
 134:	08 b6       	in	r0, 0x38	; 56
 136:	00 fe       	sbrs	r0, 0
 138:	fd cf       	rjmp	.-6      	; 0x134 <timer_init+0x42>
		Timer_flags = 0x01;	// Clear TOV0 flag
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	28 bf       	out	0x38, r18	; 56
	int nIterations = (int)(time/(256*1.024)); // 1
	int extra = time % (int)(ceil((256*1.024))); // 37
	int extra_TCNT0_initial_value = 256 - extra; // 256 - 37 = 219
	
	Timer_control = 0b00000101;	// Timer0, normal mode, /1024 prescalar 
	for(int iterator = 0 ; iterator < nIterations ;iterator++)
 13e:	01 96       	adiw	r24, 0x01	; 1
 140:	8e 17       	cp	r24, r30
 142:	9f 07       	cpc	r25, r31
 144:	b4 f3       	brlt	.-20     	; 0x132 <timer_init+0x40>
		Timer_data = 0x00;
		while(Timer_overflow_flag == 0);  // Wait for TOV0 to roll overs
		Timer_flags = 0x01;	// Clear TOV0 flag
	}
	
	Timer_data = extra_TCNT0_initial_value; // setting the intial value of TCVTO to be 256 - 37 = 219
 146:	42 bf       	out	0x32, r20	; 50
	while(Timer_overflow_flag == 0);
 148:	08 b6       	in	r0, 0x38	; 56
 14a:	00 fe       	sbrs	r0, 0
 14c:	fd cf       	rjmp	.-6      	; 0x148 <timer_init+0x56>
	Timer_flags = 0x01;  		// Clear TOV0 flag 
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	88 bf       	out	0x38, r24	; 56
	Timer_control = 0x00; // disable timer0
 152:	13 be       	out	0x33, r1	; 51
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <__divsf3>:
 15a:	0e 94 c1 00 	call	0x182	; 0x182 <__divsf3x>
 15e:	0c 94 a9 01 	jmp	0x352	; 0x352 <__fp_round>
 162:	0e 94 a2 01 	call	0x344	; 0x344 <__fp_pscB>
 166:	58 f0       	brcs	.+22     	; 0x17e <__divsf3+0x24>
 168:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_pscA>
 16c:	40 f0       	brcs	.+16     	; 0x17e <__divsf3+0x24>
 16e:	29 f4       	brne	.+10     	; 0x17a <__divsf3+0x20>
 170:	5f 3f       	cpi	r21, 0xFF	; 255
 172:	29 f0       	breq	.+10     	; 0x17e <__divsf3+0x24>
 174:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_inf>
 178:	51 11       	cpse	r21, r1
 17a:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_szero>
 17e:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_nan>

00000182 <__divsf3x>:
 182:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_split3>
 186:	68 f3       	brcs	.-38     	; 0x162 <__divsf3+0x8>

00000188 <__divsf3_pse>:
 188:	99 23       	and	r25, r25
 18a:	b1 f3       	breq	.-20     	; 0x178 <__divsf3+0x1e>
 18c:	55 23       	and	r21, r21
 18e:	91 f3       	breq	.-28     	; 0x174 <__divsf3+0x1a>
 190:	95 1b       	sub	r25, r21
 192:	55 0b       	sbc	r21, r21
 194:	bb 27       	eor	r27, r27
 196:	aa 27       	eor	r26, r26
 198:	62 17       	cp	r22, r18
 19a:	73 07       	cpc	r23, r19
 19c:	84 07       	cpc	r24, r20
 19e:	38 f0       	brcs	.+14     	; 0x1ae <__divsf3_pse+0x26>
 1a0:	9f 5f       	subi	r25, 0xFF	; 255
 1a2:	5f 4f       	sbci	r21, 0xFF	; 255
 1a4:	22 0f       	add	r18, r18
 1a6:	33 1f       	adc	r19, r19
 1a8:	44 1f       	adc	r20, r20
 1aa:	aa 1f       	adc	r26, r26
 1ac:	a9 f3       	breq	.-22     	; 0x198 <__divsf3_pse+0x10>
 1ae:	35 d0       	rcall	.+106    	; 0x21a <__divsf3_pse+0x92>
 1b0:	0e 2e       	mov	r0, r30
 1b2:	3a f0       	brmi	.+14     	; 0x1c2 <__divsf3_pse+0x3a>
 1b4:	e0 e8       	ldi	r30, 0x80	; 128
 1b6:	32 d0       	rcall	.+100    	; 0x21c <__divsf3_pse+0x94>
 1b8:	91 50       	subi	r25, 0x01	; 1
 1ba:	50 40       	sbci	r21, 0x00	; 0
 1bc:	e6 95       	lsr	r30
 1be:	00 1c       	adc	r0, r0
 1c0:	ca f7       	brpl	.-14     	; 0x1b4 <__divsf3_pse+0x2c>
 1c2:	2b d0       	rcall	.+86     	; 0x21a <__divsf3_pse+0x92>
 1c4:	fe 2f       	mov	r31, r30
 1c6:	29 d0       	rcall	.+82     	; 0x21a <__divsf3_pse+0x92>
 1c8:	66 0f       	add	r22, r22
 1ca:	77 1f       	adc	r23, r23
 1cc:	88 1f       	adc	r24, r24
 1ce:	bb 1f       	adc	r27, r27
 1d0:	26 17       	cp	r18, r22
 1d2:	37 07       	cpc	r19, r23
 1d4:	48 07       	cpc	r20, r24
 1d6:	ab 07       	cpc	r26, r27
 1d8:	b0 e8       	ldi	r27, 0x80	; 128
 1da:	09 f0       	breq	.+2      	; 0x1de <__divsf3_pse+0x56>
 1dc:	bb 0b       	sbc	r27, r27
 1de:	80 2d       	mov	r24, r0
 1e0:	bf 01       	movw	r22, r30
 1e2:	ff 27       	eor	r31, r31
 1e4:	93 58       	subi	r25, 0x83	; 131
 1e6:	5f 4f       	sbci	r21, 0xFF	; 255
 1e8:	3a f0       	brmi	.+14     	; 0x1f8 <__divsf3_pse+0x70>
 1ea:	9e 3f       	cpi	r25, 0xFE	; 254
 1ec:	51 05       	cpc	r21, r1
 1ee:	78 f0       	brcs	.+30     	; 0x20e <__divsf3_pse+0x86>
 1f0:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_inf>
 1f4:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_szero>
 1f8:	5f 3f       	cpi	r21, 0xFF	; 255
 1fa:	e4 f3       	brlt	.-8      	; 0x1f4 <__divsf3_pse+0x6c>
 1fc:	98 3e       	cpi	r25, 0xE8	; 232
 1fe:	d4 f3       	brlt	.-12     	; 0x1f4 <__divsf3_pse+0x6c>
 200:	86 95       	lsr	r24
 202:	77 95       	ror	r23
 204:	67 95       	ror	r22
 206:	b7 95       	ror	r27
 208:	f7 95       	ror	r31
 20a:	9f 5f       	subi	r25, 0xFF	; 255
 20c:	c9 f7       	brne	.-14     	; 0x200 <__divsf3_pse+0x78>
 20e:	88 0f       	add	r24, r24
 210:	91 1d       	adc	r25, r1
 212:	96 95       	lsr	r25
 214:	87 95       	ror	r24
 216:	97 f9       	bld	r25, 7
 218:	08 95       	ret
 21a:	e1 e0       	ldi	r30, 0x01	; 1
 21c:	66 0f       	add	r22, r22
 21e:	77 1f       	adc	r23, r23
 220:	88 1f       	adc	r24, r24
 222:	bb 1f       	adc	r27, r27
 224:	62 17       	cp	r22, r18
 226:	73 07       	cpc	r23, r19
 228:	84 07       	cpc	r24, r20
 22a:	ba 07       	cpc	r27, r26
 22c:	20 f0       	brcs	.+8      	; 0x236 <__divsf3_pse+0xae>
 22e:	62 1b       	sub	r22, r18
 230:	73 0b       	sbc	r23, r19
 232:	84 0b       	sbc	r24, r20
 234:	ba 0b       	sbc	r27, r26
 236:	ee 1f       	adc	r30, r30
 238:	88 f7       	brcc	.-30     	; 0x21c <__divsf3_pse+0x94>
 23a:	e0 95       	com	r30
 23c:	08 95       	ret

0000023e <__fixsfsi>:
 23e:	0e 94 26 01 	call	0x24c	; 0x24c <__fixunssfsi>
 242:	68 94       	set
 244:	b1 11       	cpse	r27, r1
 246:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_szero>
 24a:	08 95       	ret

0000024c <__fixunssfsi>:
 24c:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_splitA>
 250:	88 f0       	brcs	.+34     	; 0x274 <__fixunssfsi+0x28>
 252:	9f 57       	subi	r25, 0x7F	; 127
 254:	98 f0       	brcs	.+38     	; 0x27c <__fixunssfsi+0x30>
 256:	b9 2f       	mov	r27, r25
 258:	99 27       	eor	r25, r25
 25a:	b7 51       	subi	r27, 0x17	; 23
 25c:	b0 f0       	brcs	.+44     	; 0x28a <__fixunssfsi+0x3e>
 25e:	e1 f0       	breq	.+56     	; 0x298 <__fixunssfsi+0x4c>
 260:	66 0f       	add	r22, r22
 262:	77 1f       	adc	r23, r23
 264:	88 1f       	adc	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	1a f0       	brmi	.+6      	; 0x270 <__fixunssfsi+0x24>
 26a:	ba 95       	dec	r27
 26c:	c9 f7       	brne	.-14     	; 0x260 <__fixunssfsi+0x14>
 26e:	14 c0       	rjmp	.+40     	; 0x298 <__fixunssfsi+0x4c>
 270:	b1 30       	cpi	r27, 0x01	; 1
 272:	91 f0       	breq	.+36     	; 0x298 <__fixunssfsi+0x4c>
 274:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__fp_zero>
 278:	b1 e0       	ldi	r27, 0x01	; 1
 27a:	08 95       	ret
 27c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_zero>
 280:	67 2f       	mov	r22, r23
 282:	78 2f       	mov	r23, r24
 284:	88 27       	eor	r24, r24
 286:	b8 5f       	subi	r27, 0xF8	; 248
 288:	39 f0       	breq	.+14     	; 0x298 <__fixunssfsi+0x4c>
 28a:	b9 3f       	cpi	r27, 0xF9	; 249
 28c:	cc f3       	brlt	.-14     	; 0x280 <__fixunssfsi+0x34>
 28e:	86 95       	lsr	r24
 290:	77 95       	ror	r23
 292:	67 95       	ror	r22
 294:	b3 95       	inc	r27
 296:	d9 f7       	brne	.-10     	; 0x28e <__fixunssfsi+0x42>
 298:	3e f4       	brtc	.+14     	; 0x2a8 <__fixunssfsi+0x5c>
 29a:	90 95       	com	r25
 29c:	80 95       	com	r24
 29e:	70 95       	com	r23
 2a0:	61 95       	neg	r22
 2a2:	7f 4f       	sbci	r23, 0xFF	; 255
 2a4:	8f 4f       	sbci	r24, 0xFF	; 255
 2a6:	9f 4f       	sbci	r25, 0xFF	; 255
 2a8:	08 95       	ret

000002aa <__floatunsisf>:
 2aa:	e8 94       	clt
 2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <__floatsisf+0x12>

000002ae <__floatsisf>:
 2ae:	97 fb       	bst	r25, 7
 2b0:	3e f4       	brtc	.+14     	; 0x2c0 <__floatsisf+0x12>
 2b2:	90 95       	com	r25
 2b4:	80 95       	com	r24
 2b6:	70 95       	com	r23
 2b8:	61 95       	neg	r22
 2ba:	7f 4f       	sbci	r23, 0xFF	; 255
 2bc:	8f 4f       	sbci	r24, 0xFF	; 255
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	99 23       	and	r25, r25
 2c2:	a9 f0       	breq	.+42     	; 0x2ee <__floatsisf+0x40>
 2c4:	f9 2f       	mov	r31, r25
 2c6:	96 e9       	ldi	r25, 0x96	; 150
 2c8:	bb 27       	eor	r27, r27
 2ca:	93 95       	inc	r25
 2cc:	f6 95       	lsr	r31
 2ce:	87 95       	ror	r24
 2d0:	77 95       	ror	r23
 2d2:	67 95       	ror	r22
 2d4:	b7 95       	ror	r27
 2d6:	f1 11       	cpse	r31, r1
 2d8:	f8 cf       	rjmp	.-16     	; 0x2ca <__floatsisf+0x1c>
 2da:	fa f4       	brpl	.+62     	; 0x31a <__floatsisf+0x6c>
 2dc:	bb 0f       	add	r27, r27
 2de:	11 f4       	brne	.+4      	; 0x2e4 <__floatsisf+0x36>
 2e0:	60 ff       	sbrs	r22, 0
 2e2:	1b c0       	rjmp	.+54     	; 0x31a <__floatsisf+0x6c>
 2e4:	6f 5f       	subi	r22, 0xFF	; 255
 2e6:	7f 4f       	sbci	r23, 0xFF	; 255
 2e8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ea:	9f 4f       	sbci	r25, 0xFF	; 255
 2ec:	16 c0       	rjmp	.+44     	; 0x31a <__floatsisf+0x6c>
 2ee:	88 23       	and	r24, r24
 2f0:	11 f0       	breq	.+4      	; 0x2f6 <__floatsisf+0x48>
 2f2:	96 e9       	ldi	r25, 0x96	; 150
 2f4:	11 c0       	rjmp	.+34     	; 0x318 <__floatsisf+0x6a>
 2f6:	77 23       	and	r23, r23
 2f8:	21 f0       	breq	.+8      	; 0x302 <__floatsisf+0x54>
 2fa:	9e e8       	ldi	r25, 0x8E	; 142
 2fc:	87 2f       	mov	r24, r23
 2fe:	76 2f       	mov	r23, r22
 300:	05 c0       	rjmp	.+10     	; 0x30c <__floatsisf+0x5e>
 302:	66 23       	and	r22, r22
 304:	71 f0       	breq	.+28     	; 0x322 <__floatsisf+0x74>
 306:	96 e8       	ldi	r25, 0x86	; 134
 308:	86 2f       	mov	r24, r22
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	2a f0       	brmi	.+10     	; 0x31a <__floatsisf+0x6c>
 310:	9a 95       	dec	r25
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	da f7       	brpl	.-10     	; 0x310 <__floatsisf+0x62>
 31a:	88 0f       	add	r24, r24
 31c:	96 95       	lsr	r25
 31e:	87 95       	ror	r24
 320:	97 f9       	bld	r25, 7
 322:	08 95       	ret

00000324 <__fp_inf>:
 324:	97 f9       	bld	r25, 7
 326:	9f 67       	ori	r25, 0x7F	; 127
 328:	80 e8       	ldi	r24, 0x80	; 128
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	60 e0       	ldi	r22, 0x00	; 0
 32e:	08 95       	ret

00000330 <__fp_nan>:
 330:	9f ef       	ldi	r25, 0xFF	; 255
 332:	80 ec       	ldi	r24, 0xC0	; 192
 334:	08 95       	ret

00000336 <__fp_pscA>:
 336:	00 24       	eor	r0, r0
 338:	0a 94       	dec	r0
 33a:	16 16       	cp	r1, r22
 33c:	17 06       	cpc	r1, r23
 33e:	18 06       	cpc	r1, r24
 340:	09 06       	cpc	r0, r25
 342:	08 95       	ret

00000344 <__fp_pscB>:
 344:	00 24       	eor	r0, r0
 346:	0a 94       	dec	r0
 348:	12 16       	cp	r1, r18
 34a:	13 06       	cpc	r1, r19
 34c:	14 06       	cpc	r1, r20
 34e:	05 06       	cpc	r0, r21
 350:	08 95       	ret

00000352 <__fp_round>:
 352:	09 2e       	mov	r0, r25
 354:	03 94       	inc	r0
 356:	00 0c       	add	r0, r0
 358:	11 f4       	brne	.+4      	; 0x35e <__fp_round+0xc>
 35a:	88 23       	and	r24, r24
 35c:	52 f0       	brmi	.+20     	; 0x372 <__fp_round+0x20>
 35e:	bb 0f       	add	r27, r27
 360:	40 f4       	brcc	.+16     	; 0x372 <__fp_round+0x20>
 362:	bf 2b       	or	r27, r31
 364:	11 f4       	brne	.+4      	; 0x36a <__fp_round+0x18>
 366:	60 ff       	sbrs	r22, 0
 368:	04 c0       	rjmp	.+8      	; 0x372 <__fp_round+0x20>
 36a:	6f 5f       	subi	r22, 0xFF	; 255
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	08 95       	ret

00000374 <__fp_split3>:
 374:	57 fd       	sbrc	r21, 7
 376:	90 58       	subi	r25, 0x80	; 128
 378:	44 0f       	add	r20, r20
 37a:	55 1f       	adc	r21, r21
 37c:	59 f0       	breq	.+22     	; 0x394 <__fp_splitA+0x10>
 37e:	5f 3f       	cpi	r21, 0xFF	; 255
 380:	71 f0       	breq	.+28     	; 0x39e <__fp_splitA+0x1a>
 382:	47 95       	ror	r20

00000384 <__fp_splitA>:
 384:	88 0f       	add	r24, r24
 386:	97 fb       	bst	r25, 7
 388:	99 1f       	adc	r25, r25
 38a:	61 f0       	breq	.+24     	; 0x3a4 <__fp_splitA+0x20>
 38c:	9f 3f       	cpi	r25, 0xFF	; 255
 38e:	79 f0       	breq	.+30     	; 0x3ae <__fp_splitA+0x2a>
 390:	87 95       	ror	r24
 392:	08 95       	ret
 394:	12 16       	cp	r1, r18
 396:	13 06       	cpc	r1, r19
 398:	14 06       	cpc	r1, r20
 39a:	55 1f       	adc	r21, r21
 39c:	f2 cf       	rjmp	.-28     	; 0x382 <__fp_split3+0xe>
 39e:	46 95       	lsr	r20
 3a0:	f1 df       	rcall	.-30     	; 0x384 <__fp_splitA>
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <__fp_splitA+0x30>
 3a4:	16 16       	cp	r1, r22
 3a6:	17 06       	cpc	r1, r23
 3a8:	18 06       	cpc	r1, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	f1 cf       	rjmp	.-30     	; 0x390 <__fp_splitA+0xc>
 3ae:	86 95       	lsr	r24
 3b0:	71 05       	cpc	r23, r1
 3b2:	61 05       	cpc	r22, r1
 3b4:	08 94       	sec
 3b6:	08 95       	ret

000003b8 <__fp_zero>:
 3b8:	e8 94       	clt

000003ba <__fp_szero>:
 3ba:	bb 27       	eor	r27, r27
 3bc:	66 27       	eor	r22, r22
 3be:	77 27       	eor	r23, r23
 3c0:	cb 01       	movw	r24, r22
 3c2:	97 f9       	bld	r25, 7
 3c4:	08 95       	ret

000003c6 <__divmodhi4>:
 3c6:	97 fb       	bst	r25, 7
 3c8:	07 2e       	mov	r0, r23
 3ca:	16 f4       	brtc	.+4      	; 0x3d0 <__divmodhi4+0xa>
 3cc:	00 94       	com	r0
 3ce:	07 d0       	rcall	.+14     	; 0x3de <__divmodhi4_neg1>
 3d0:	77 fd       	sbrc	r23, 7
 3d2:	09 d0       	rcall	.+18     	; 0x3e6 <__divmodhi4_neg2>
 3d4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__udivmodhi4>
 3d8:	07 fc       	sbrc	r0, 7
 3da:	05 d0       	rcall	.+10     	; 0x3e6 <__divmodhi4_neg2>
 3dc:	3e f4       	brtc	.+14     	; 0x3ec <__divmodhi4_exit>

000003de <__divmodhi4_neg1>:
 3de:	90 95       	com	r25
 3e0:	81 95       	neg	r24
 3e2:	9f 4f       	sbci	r25, 0xFF	; 255
 3e4:	08 95       	ret

000003e6 <__divmodhi4_neg2>:
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255

000003ec <__divmodhi4_exit>:
 3ec:	08 95       	ret

000003ee <__udivmodhi4>:
 3ee:	aa 1b       	sub	r26, r26
 3f0:	bb 1b       	sub	r27, r27
 3f2:	51 e1       	ldi	r21, 0x11	; 17
 3f4:	07 c0       	rjmp	.+14     	; 0x404 <__udivmodhi4_ep>

000003f6 <__udivmodhi4_loop>:
 3f6:	aa 1f       	adc	r26, r26
 3f8:	bb 1f       	adc	r27, r27
 3fa:	a6 17       	cp	r26, r22
 3fc:	b7 07       	cpc	r27, r23
 3fe:	10 f0       	brcs	.+4      	; 0x404 <__udivmodhi4_ep>
 400:	a6 1b       	sub	r26, r22
 402:	b7 0b       	sbc	r27, r23

00000404 <__udivmodhi4_ep>:
 404:	88 1f       	adc	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	5a 95       	dec	r21
 40a:	a9 f7       	brne	.-22     	; 0x3f6 <__udivmodhi4_loop>
 40c:	80 95       	com	r24
 40e:	90 95       	com	r25
 410:	bc 01       	movw	r22, r24
 412:	cd 01       	movw	r24, r26
 414:	08 95       	ret

00000416 <_exit>:
 416:	f8 94       	cli

00000418 <__stop_program>:
 418:	ff cf       	rjmp	.-2      	; 0x418 <__stop_program>
